---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: sonarr
      version: 23.5.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      s3v2:
        type: s3
        url: "${S3_URL}" #"https://s3.amazonaws.com"
        bucket: "${S3_BUCKET_PREFIX}-sonarr"
        accessKey: "${S3_KEY_ID}"
        secretKey: "${S3_SECRET_KEY}"
        encrKey: "${S3_SECRET_KEY}"
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /ping
                readiness:
                  enabled: true
                  type: http
                  path: /ping
                startup:
                  enabled: true
                  type: http
                  path: /ping
              env:
                SONARR__SERVER__PORT: "{{ .Values.service.main.ports.main.port }}"
                # External | Basic | Forms
                SONARR__AUTH__METHOD: ""
                # DisabledForLocalAddresses | Enabled
                SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
                # SONARR__APP__THEME: dark
                # SONARR__APP__INSTANCENAME: Sonarr
                # SONARR__LOG__LEVEL: info
                # SONARR__UPDATE__BRANCH: develop
    persistence:
      # config:
      #   volsync:
      #   - name: config
      #     type: restic
      #     cleanupTempPVC: true
      #     cleanupCachePVC: true
      #     credentials: s3v2
      #     dest:
      #       enabled: true
      #     src:
      #       enabled: true
      #       trigger:
      #         schedule: 10 * * * *
      config:
        volsync:
          - name: config
            type: restic
            credentials: s3v2
            dest:
              enabled: true
            src:
              enabled: true
      # config:
      #   enabled: true
      #   targetSelector:
      #     main:
      #       main:
      #         mountPath: /config
      #       exportarr:
      #         mountPath: /config
      #         readOnly: true
      plex-media:
        enabled: true
        existingClaim: plex-media-pvc
        mountPath: /mnt
    metrics:
      main:
        enabled: true
        type: "servicemonitor"
        endpoints:
          - port: metrics
            path: /metrics
        targetSelector: metrics
        prometheusRule:
          enabled: false
    portal:
      open:
        enabled: true
    ingress:
      main:
        enabled: true
        hosts:
          - host: sonarr.${DOMAIN_0}
        tls:
          - hosts:
              - sonarr.${DOMAIN_0}
            secretName: sonarr-talos4-tls
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod

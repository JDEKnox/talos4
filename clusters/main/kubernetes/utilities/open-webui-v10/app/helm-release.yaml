# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: open-webui-v10
  namespace: utilities
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 14.5.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      s3v2:
        type: s3
        url: "${S3_MINIO_URL}" # http://internal.hostname.local:9000
        bucket: "${S3_MINIO_BUCKET_PREFIX}-{{ .Chart.Name }}"
        accessKey: "${S3_MINIO_KEY_ID}"
        secretKey: "${S3_MINIO_SECRET_KEY}"
        encrKey: "${S3_MINIO_SECRET_KEY}"
    image:
      repository: ghcr.io/open-webui/open-webui
      pullPolicy: IfNotPresent
      tag: latest@sha256:b2c83b5c7b9b244999307b4b1c0e195d41268f3d3a62b84b470c0cea5c5743fd
    pipelines:
      repository: ghcr.io/open-webui/pipelines
      pullPolicy: IfNotPresent
      tag: main

    # pipelines:
    #   # -- Automatically install Pipelines chart to extend Open WebUI functionality using Pipelines: https://github.com/open-webui/pipelines
    #   enabled: true
    #   # -- This section can be used to pass required environment variables to your pipelines (e.g. Langfuse hostname)
    #   extraEnvVars: []
    portal:
      open:
        enabled: true
    workload:
      main:
        podSpec:
          containers:
            main:
              imageSelector: image
              env:
                PORT: "{{ .Values.service.main.ports.main.port }}"
                OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
                WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY}
                ENABLE_SIGNUP: true
                DEFAULT_USER_ROLE: "user"
      pipelines:
        enabled: true
        type: Deployment
        podSpec:
          containers:
            pipelines:
              primary: true
              enabled: true
              imageSelector: pipelines
              resources:
                excludeExtra: true
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.main.ports.main.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.main.ports.main.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.main.ports.main.port }}"
    ingress:
      main:
        enabled: true
        hosts:
          - host: ai.${DOMAIN_1}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-1-le-prod
    service:
      main:
        targetSelector: main
        ports:
          main:
            protocol: http
            port: 10686
      pipelines:
        enabled: true
        targetSelector: pipelines
        ports:
          pipelines:
            enabled: true
            protocol: http
            targetPort: 9099
            port: 9099
            targetSelector: pipelines
    persistence:
      data:
        enabled: true
        mountPath: "/app/backend/data"
        volsync:
          - name: data1
            type: restic
            credentials: s3v2
            dest:
              enabled: true
            src:
              enabled: true
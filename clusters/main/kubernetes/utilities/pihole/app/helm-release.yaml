---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: pihole
  namespace: pihole
spec:
  interval: 15m
  chart:
    spec:
      chart: pihole
      version: 19.0.5
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      s3v2:
        type: s3
        url: "${S3_MINIO_URL}" #"https://s3.amazonaws.com"
        bucket: "${S3_MINIO_BUCKET_PREFIX}-{{ .Chart.Name }}"
        accessKey: "${S3_MINIO_KEY_ID}"
        secretKey: "${S3_MINIO_SECRET_KEY}"
        encrKey: "${S3_MINIO_SECRET_KEY}"
    # persistence:
    #   config:
    #     enabled: true
    #     mountPath: "/etc/pihole"
    #   dnsmasq:
    #     enabled: true
    #     mountPath: "/etc/dnsmasq.d"
    persistence:
      config:
        volsync:
        - name: config3
          type: restic
          cleanupTempPVC: true
          cleanupCachePVC: true
          credentials: s3v2
          dest:
            enabled: true
          src:
            enabled: true
            trigger:
              schedule: 40 1 * * *
      dnsmasq:
        volsync:
        - name: dnsmasq3
          type: restic
          cleanupTempPVC: true
          cleanupCachePVC: true
          credentials: s3v2
          dest:
            enabled: true
          src:
            enabled: true
            trigger:
              schedule: 40 1 * * *
    ingress:
      main:
        enabled: true
        hosts:
          - host: pihole.${DOMAIN_0}
        tls:
          - hosts:
              - pihole.${DOMAIN_0}
            secretName: pihole-talos4-tls
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
                FTLCONF_dns_upstreams: "192.168.10.112#4443"
    service:
      dns:
        loadBalancerIP: ${PIHOLE_IP}
        type: LoadBalancer